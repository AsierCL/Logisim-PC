8bits numero

2bits codigo de acción

2bits número de registro

2bits banco/caché a modificar

2bits operacion (ALU)

***********************
---------------------------------------------
OO->Modificacion de datos en memoria
	1. Numero a cargar (en caso de carga)
	2. Codigo de acción
		00 Mantener
		01 ShiftRight
		10 ShiftLeft
		11 Cargar
	3. Numero de registro de cada banco
	4. Banco que cargas
Ejemplo:
01001000|11|00|01|00	->Numero a cargar|Operacion carga|Registro 00|Banco 01|Codigo de carga en registro


---------------------------------------------
01->Modificacion de datos en registro
	OPCION0, carga inmediata (xxxxxxxxxxxxx|0|01)
		1. Numero a cargar (en caso de carga)
		2. Codigo de acción
			00 Mantener
			01 ShiftRight
			10 ShiftLeft
			11 Cargar
		3. Modificar regA (0), regB(1)
		4. 2bits vacios
		5. Cero (OPCION0)
Ejemplo
01001010|11|1|xx|0|01    ->Numero a cargar|Operacion carga|Registro B|xx|Codigo opcion0|Codigo modificacion reg
*********************** HASTA AQUI FUNCIONANDO

	OPCION1, carga de memoria (xxxxxxxxxxxxx|1|01)
		1. Numero de registro de cada banco
		2. Banco que cargas
		3. Codigo carga (11) ¿INNECESARIO?

Ejemplo
01|10|11|xxxxxxx|1|01	->Num Regs del que cargas|Num del banco|Codigo carga|Codigo opcion1|Codigo modificacion reg


---------------------------------------------
10->Carga resultado ALU en memoria
	1. 8bits vacios
	2. Codigo de acción (11) Carga
	3. Numero de registro de cada banco
	4. Banco en el que se carga
xxxxxxxx|11|10|11|10	->xxxx|Operacion carga|Registro 10|Banco 11|xx|¿?¿?¿??¿?¿?¿?¿?


---------------------------------------------
11->Operacion ALU
	1. 8bits vacios
	2. Operación
		00 And
		01 Or
		10 Suma
		11 Resta
	3. 1bit vacio
	4. Acarreo
	5. 2bits vacios
xxxxxxxx|10|x|1|xx|11	->xxxx|Operacion suma|x|Acarreo|xx|Codigo suma|

			((Operacion a modificar con un futuro diseño ALU))
